name: Build and Deploy BackendApp to ECS

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up QEMU for multi-arch builds
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker Image to ECR
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t 375949729256.dkr.ecr.us-east-2.amazonaws.com/my-ecr-repo:latest \
            --push .

      - name: Stop Existing ECS Tasks
        run: |
          TASK_IDS=$(aws ecs list-tasks \
            --cluster my-fargate-service-cluster \
            --service-name my-fargate-service \
            --query "taskArns[]" \
            --output text)
          if [ -n "$TASK_IDS" ]; then
            for TASK_ID in $TASK_IDS; do
              aws ecs stop-task \
                --cluster my-fargate-service-cluster \
                --task $TASK_ID
            done
          fi

      - name: Force New Deployment to ECS
        run: |
          aws ecs update-service \
            --cluster my-fargate-service-cluster \
            --service my-fargate-service \
            --force-new-deployment
